name: Deploy to Cloud Run

on:
  push:
    branches: [main] # Adjust based on your branch name

env:
  PROJECT_ID: indieout
  SERVICE_NAME: indieout
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Authorize Docker push to Google Container Registry
        run: gcloud auth configure-docker

      - name: Create Dockerfile
        run: |
          cat > Dockerfile << 'EOL'
          FROM ruby:3.0-slim

          # Install dependencies
          RUN apt-get update -qq && \
              apt-get install -y build-essential libpq-dev nodejs git && \
              apt-get clean && \
              rm -rf /var/lib/apt/lists/*

          WORKDIR /app

          # Install bundler for Rails 3.2.6
          RUN gem install bundler -v 1.17.3

          # Set Rails version to 3.2.6
          RUN echo "gem 'rails', '3.2.6'" > Gemfile

          # Copy the Rails application from the api folder
          COPY api/ /app/

          # Install gems
          RUN bundle _1.17.3_ config set --local path 'vendor/bundle' && \
              bundle _1.17.3_ install --without development test

          # Setup Rails-specific settings for production
          RUN cp config/database.yml.example config/database.yml || true
          RUN bundle _1.17.3_ exec rake assets:precompile RAILS_ENV=production || true

          # Set environment variables
          ENV RAILS_ENV=production
          ENV RACK_ENV=production

          # Expose port
          EXPOSE 8080

          # Start the server
          CMD ["bundle", "exec", "rails", "server", "-p", "8080", "-e", "production"]
          EOL

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --add-cloudsql-instances=${{ env.PROJECT_ID }}:${{ env.REGION }}:indieout-db \
            --set-env-vars="RAILS_ENV=production,RACK_ENV=production,SECRET_TOKEN=${{ secrets.SECRET_TOKEN }},DB_NAME=indieout_production,DB_USERNAME=indieout-app-user,DB_PASSWORD=${{ secrets.DB_PASSWORD }}"
