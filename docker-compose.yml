version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: indieout
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: indieout_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U indieout"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and background jobs
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rails API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://indieout:${DB_PASSWORD:-password}@postgres:5432/indieout_production
      REDIS_URL: redis://redis:6379/0
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      RAILS_LOG_TO_STDOUT: "true"
      RAILS_SERVE_STATIC_FILES: "true"
    volumes:
      - ./api:/app
      - rails_storage:/app/storage
      - rails_uploads:/app/public/uploads
    ports:
      - "5000:3000"
    command: bash -c "bundle exec rails db:prepare && bundle exec puma -C config/puma.rb"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend (Development)
  client-dev:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    depends_on:
      - api
    environment:
      VITE_API_URL: http://localhost:5000
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    command: npm run dev -- --host
    profiles:
      - development

  # Nginx (Production)
  nginx:
    image: nginx:alpine
    depends_on:
      - api
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./client/dist:/usr/share/nginx/html:ro
      - rails_uploads:/var/www/uploads:ro
    ports:
      - "80:80"
      - "443:443"
    profiles:
      - production
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Background job processor (when needed)
  # sidekiq:
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     RAILS_ENV: production
  #     DATABASE_URL: postgresql://indieout:${DB_PASSWORD:-password}@postgres:5432/indieout_production
  #     REDIS_URL: redis://redis:6379/0
  #     RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
  #   volumes:
  #     - ./api:/app
  #     - rails_storage:/app/storage
  #   command: bundle exec sidekiq
  #   profiles:
  #     - with-jobs

volumes:
  postgres_data:
  redis_data:
  rails_storage:
  rails_uploads: